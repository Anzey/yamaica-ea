package a.b.c.test

typeCollection {
    enumeration MyEnum {
        XYZ
    }
    struct MyStruct {
        Int32 field
    }
    map mymap {
        Boolean to Int16
    }
    const String CONST = "Hello World"
    union myunion {
        Int8 header
    }
    typedef mytypedef is myunion
    array myarray of mytypedef

    enumeration ERRORS {
        <**
            @description : Description of C (2.0).
        **>
        C
        <**
            @description : Description of D (2.0).
        **>
        D
        E
    }

    typedef newType is Int32

    typedef aNewType is UInt64

    array newArray of aNewType

    enumeration Extended extends ERRORS {
        B
    }

    struct newStruct polymorphic {
        newArray[] arrayArray
    }

    struct newExtendedStruct extends newStruct {
        newArray myArray
        newArray myArrayA
        newArray myArrayB
    }

    union newUnion {
        Boolean myBool
        String myString
    }

    map newMap {
        String to Boolean
    }
}